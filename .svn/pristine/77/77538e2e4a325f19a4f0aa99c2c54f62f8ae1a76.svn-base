@(brForm: Form[dummymodels.reports.BreakReport], dataSet: Array[Array[String]])

@import connectplus.models.geo.Branch
@import connectplus.models.User
@import services.AppConstants
@import helper._
@import dummymodels.reports.BreakReport


@main("Break Report") {
  
  <style type="text/css">
    .custom-date-style {
    background-color: red !important;
  }
  </style>
  
  <script>
    function submitForm(isPdfValue){
      $('#isPdf').val(isPdfValue);
      document.getElementById("brForm").submit();
    }
 </script>
  <fieldset>
    <legend>Break Report</legend>
    @form(action=routes.ReportManagement.generateBreakReport(), 'id -> "brForm") {
    <table>
     <tr>
       <td> 
         <input type="hidden" name="isPdf" value="" id="isPdf" />
       </td>
     </tr>
     <tr>
      <td>
        @inputText(field=brForm("startDate") , '_label->"Start Date:", 'id -> "startDate" , '_showConstraints -> false)<br/>
      </td>
      <td> 
        @inputText(field=brForm("endDate") , '_label->"End Date:", 'id -> "endDate" ,  '_showConstraints -> false)<br/>
      </td>
    </tr>
     <tr>
       <td> 
         @select(brForm("sol"),
           options(Branch.getAsMapForCurrentUser()),
           '_label -> "Outlet Name:",
           '_default -> "All",
           '_showConstraints -> false
         )
       </td>
       <td> 
         @select(brForm("username"),
           options(User.getUsernameAsMapForReportFilter()),
           '_label -> "User:",
           '_default -> "All",
           '_showConstraints -> false
         )
      </td>
    </tr>
    <tr>
      <td>
        <input type="submit" value="Search" id="search" onclick="submitForm('');"/>
      </td>
      <td>
        <input type="button" value="Download PDF" id="downloadPdf" onclick="submitForm('on');"/>
      </td>
      <td>
        <input type="button" value="Download XLS" id="downloadXls" onclick="submitForm('off');"/>
      </td>
    </tr>
  </table> 
  }
   </fieldset></div><br/>
   
   
  
  <table>
    <tr>
      <th class="tabledata">Outlet Name</th>
      <th class="tabledata">Date</th>
      <th class="tabledata">User</th>
      <th class="tabledata">Counter</th>
      <th class="tabledata">Reason for Break</th>
      <th class="tabledata">Start Time</th>
      <th class="tabledata">End Time</th>
    </tr>
     @if(dataSet != null){
       @for((row, idx) <- dataSet.zipWithIndex){
     	 <tr @if(idx%2==0){class="even"}else{class="odd"}>
     	 @for(cell <- row){
     	   <td class="tabledata">@cell</td>
     	 }
     	 </tr>
       }
     }
  </table>
  
  <script>
      /*
        window.onerror = function(errorMsg) {
        $('#console').html($('#console').html()+'<br>'+errorMsg)
        }
     */

     $('#startDate').datetimepicker({
     dayOfWeekStart : 1,
     lang:'en',
     format:'@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JQ_DATEPICKER',
     //value: (new Date()).format('@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JS_FORMATTER'),
     //value: (new Date()).format("dd-mm-yyyy")+" 00:00",
     value: new Date((new Date()).setHours(0,0,0,0)).format('@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JS_FORMATTER'),
     step: @AppConstants.REPORT_DEFAULT_TIME_STEP
     });


    $('#endDate').datetimepicker({
    dayOfWeekStart : 1,
    lang:'en',
    format:'@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JQ_DATEPICKER',
    //value: (new Date()).format('@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JS_FORMATTER'),
    //value: (new Date()).format("dd-mm-yyyy")+" 00:00",
    value: new Date((new Date()).getTime()).format('@AppConstants.REPORT_DEFAULT_DATE_FORMAT_JS_FORMATTER'),
    step: @AppConstants.REPORT_DEFAULT_TIME_STEP
    });
 </script> 
 
}
